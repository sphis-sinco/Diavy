function BG_FadeIn()
{
	PlayState.instance.dialogue_background.alpha = 0.0;
	FlxTween.tween(PlayState.instance.dialogue_background, {alpha: 1}, 1, {
		ease: FlxEase.sineIn,
	});
}

function BG_FadeOut()
{
	PlayState.instance.dialogue_background.alpha = 1.0;
	FlxTween.tween(PlayState.instance.dialogue_background, {alpha: 0}, 1, {
		ease: FlxEase.sineOut,
	});
}

var animBG:FlxSprite;

function animatedBackground(name:String, width:Int, height:Int, frames:Array<Int>, fps:Int)
{
	animBG = new FlxSprite();
	animBG.loadGraphic(Assets.getAssetPath('images/dialogue/backgrounds/' + name + '.png'), true, width, height);
	animBG.animation.add('anim', frames, fps ?? 24);
	animBG.animation.play('anim');
	animBG.screenCenter();

	var curDia = PlayState.instance.dialogue[PlayState.instance.dialogue_progress];

	if (curDia.backgroundSettings != null)
	{
		if (curDia.backgroundSettings.positionOffsets != null)
		{
			animBG.x += curDia.backgroundSettings.positionOffsets.x;
			animBG.y += curDia.backgroundSettings.positionOffsets.y;
		}
		if (curDia.backgroundSettings.scaleOffsets != null)
		{
			animBG.scale.x += curDia.backgroundSettings.scaleOffsets.x;
			animBG.scale.y += curDia.backgroundSettings.scaleOffsets.y;
		}
		if (curDia.backgroundSettings.flipped != null)
		{
			animBG.flipX = curDia.backgroundSettings.flipped.x;
			animBG.flipY = curDia.backgroundSettings.flipped.y;
		}
	}

	PlayState.instance.backLayer.add(animBG);
}

function removeAnimatedBackground()
{
	PlayState.instance.backLayer.remove(animBG);
}

var sat = 0;
var hue = 0;
var con = 0;
var changeVal = 15;

function initalizeBackgroundShader()
{
	var coolioShader:AdjustColorShader = new AdjustColorShader();
	coolioShader.saturation = sat;
	coolioShader.hue = hue;
	coolioShader.contrast = con;

	PlayState.instance.dialogue_background.shader = coolioShader;
	if (animBG != null)
		animBG.shader = coolioShader;
}

function setChangeValue_Background(newcv = 0)
{
	changeVal = newcv;
}

function decrease_background_Saturation()
{
	sat -= changeVal;
	initalizeBackgroundShader();
}

function increase_background_Saturation()
{
	sat += changeVal;
	initalizeBackgroundShader();
}

function decrease_background_Hue()
{
	hue -= changeVal;
	initalizeBackgroundShader();
}

function increase_background_Hue()
{
	hue += changeVal;
	initalizeBackgroundShader();
}

function decrease_background_contrast()
{
	con -= changeVal;
	initalizeBackgroundShader();
}

function increase_background_contrast()
{
	con += changeVal;
	initalizeBackgroundShader();
}
